////构造函数：完成对象初始化，主要作用是创建对象时为对象的成员属性赋值，
//// 构造函数由编译器自动调用，无需手动调用；
//// 类名（）{}
//// 1.构造函数没有返回值，也不需要跟void
//// 2.函数名称与类名相同；
//// 3.构造函数可以有参数，因此可以发生重载
//// 4.程序在调用对象时会自动调用构造函数，无需手动调用，而且只会调用一次；
//// 
////析构函数：完成对象清理工作，主要作用是在对象销毁前系统自动调用，
//// 执行一些清理工作（一般用于清理堆区的数据）；
//// ~类名（）{}
//// 1..析构函数没有返回值，也不需要跟void
//// 2.函数名称与类名相同‘在前面要加~；
//// 3.析构函数不可以有参数，因此不可以发生重载；
//// 4.程序在对象销毁前会自动调用构造函数，无需手动调用，而且只会调用一次；
//// 
//// 
//// 
////对象的初始化和清理工作是编译器强制我们要做的事，因此如果我们不提供
////构造和析构，编译器会提供，但提供的构造函数和析构函数是空实现；
//
//
//#include<iostream>
//using namespace std;
//class KK {
//public:
//	int age;
//	KK() {//构造函数：即使你不写，编译器也会帮你创建KK(){}这一空构造函数;
//		cout << "KK构造函数的调用" << endl;
//	}
//	~KK() {//析构函数
//		cout << "KK析构函数的调用" << endl;
//	}
//};
//void test1() {
//	KK k;//对象k在栈区上创建，函数调用结束后对象就会被释放，
//	//因此释放前会调用它的析构函数；
//}
//
//int main6() {
//	test1();
//	KK k1;
//	k1.age = 10;
//	
//
//	system("pause");//程序会中断在此
//	return 0;//此语句执行完后main函数才执行完毕，main函数的对象才会释放；
//}